<?php
/**
 * Date: 9/28/19
 * Time: 5:35 PM
 */

namespace common\abstracts;


use yii\data\ActiveDataProvider;
use yii\web\Controller;
use yii\web;
use yii;

abstract class CategoryControllerAbstract extends Controller {


	public $model;
	public $modelName;
	public $dataProvider;


	abstract public function getModelName();

	abstract public function postTypeName();

	abstract public function getLabelName();

	public function init() {
		$this->modelName = $this->getModelName();


		$this->model = new $this->modelName();


		$query = $this->model->find()->where( [ 'post_type' => $this->model->postTypeName() ] );

		$this->dataProvider = new ActiveDataProvider( [
			'query'      => $query,
			'pagination' => [
				'pageSize' => 10,
			],
		] );
		parent::init(); // TODO: Change the autogenerated stub
	}

	public function actionIndex() {
		$label_name = $this->getLabelName();
		$btn_create = \yii\helpers\Html::a( 'Create', [ Yii::$app->parseActionId->parseActionId() . '/create' ], [ 'class' => 'btn btn-success' ] );


		return $this->render( '@backend/views/category/index',
			[
				'instance'     => $this,
				'model'        => $this->model,
				'dataProvider' => $this->dataProvider,
				'btn_create'   => $btn_create,
				'label'        => $label_name,
			] );
	}

	function actionCreate() {
		$post      = Yii::$app->request->post();
		$action_id = Yii::$app->parseActionId->parseActionId();

		if ( $this->model->load( $post ) ) {
			if ( $this->model->save() ) {
				Yii::$app->session->setFlash( 'success', 'Save ok' );


				return $this->redirect( [ $action_id . '/view', 'id' => $this->model->id ] );
			} else {
				Yii::$app->session->setFlash( 'error', 'Save not ok' );
			}
		}


		return $this->render( '@backend/views/category/create', [
			'model' => $this->model,
		] );
	}

	public function actionUpdate( $id = 0 ) {

		$this->model = $this->model->findOne( $id );

		if ( $this->model->load( Yii::$app->request->post() ) && $this->model->validate() ) {
			if ( $this->model->save() ) {
				Yii::$app->session->setFlash( 'success', 'Update successfully.' );
			} else {
				var_dump( $this->model->getErrors );
			}
		} else {
			var_dump( $this->model->getErrors() );
		}


		return $this->render( '@backend/views/category/update', [ 'model' => $this->model ] );
	}

	public function actionDelete( $id = 0 ) {
		$get           = Yii::$app->request->get();
		$parse_request = Yii::$app->urlManager->parseRequest( Yii::$app->request );
		$action_id     = Yii::$app->parseActionId->parseActionId();

		if ( ! empty( $get['id'] ) ) {
			$cat = call_user_func( [ $this->getModelName(), 'findOne' ], $id );
			if ( ! empty( $cat ) ) {

				$cat->delete();
				Yii::$app->session->setFlash( 'success', 'Deleted id ' . $get['id'] );
				$this->redirect( [ $action_id . "/index" ] );
			}
		} else {
			Yii::$app->session->setFlash( 'error', 'Not found id' );
			$this->redirect( [ $action_id . "/index" ] );
		}

	}

	public function actionView( $id = 0 ) {

		$model = call_user_func( [ $this->model, "find" ] );

		$model = $model->where( [
			'id'        => $id,
			'post_type' => $this->model->postTypeName()
		] )->limit( 1 )->one();

		if ( empty( $model ) ) {
			throw( new web\NotFoundHttpException() );
		}

		return $this->render( '@backend/views/category/view', [ 'model' => $model ] );
	}


}